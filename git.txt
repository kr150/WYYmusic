Linux命令：
mkdir [name] --创建文件夹

cat [文件名]   --查看文件

GIT命令：
git init --初始化仓库

git add   --添加到

git status --查看当前状态

git commit -m "想要输入的信息" [文档]   --简易提交到本地库
git commit [文件]    --复杂提交

vim [文件名] --建立文件

回溯：
git log --历史版本查询

git log --pretty=oneline    ---将信息只显示一行

git log oneline   -- 将信息只显示一行，并且只显示部分哈希值

git reflog  --将部分哈希值和移动步数显示出来

索引值回溯：
git reset --hard [部分哈希值]

符号回溯：
^ 一个向后回溯一次,几个回溯几次
git reset --hard HEAD^^    --回溯两次

使用~+数字表示回退几次
git reset --hard HEAD~3      --回溯三次

本地库文件删除：
rm [文件名]
commit后就五了，要找回就去reflog里找创建的记录然后reset --hard [哈希]

暂存区文件删除：
git reset --hard HEAD

比较：
git diff [文件名]
将工作区中的文件和智存区进行比较
git diff [本地库中历史版本][文件名]
将工作区中的文件和本地库历史记录比较

创建分支
git branch[分支名]

查看分支
git branch-v 

切换分支
git checkout[分支名]

合并分支
第一步:切换到接受修改的分支(被合并，增加新内容)上
第二部：git merge[分支名]
➢解决冲突
找到冲突文件，修改，add，不能commit加文件名，应直接commit加日志信息


签名：
项目级别：仅在本地库范围有效
git config user.name [名字]
git config user.email [email]

系统用户：登录当前操作系统的用户范围
git config --global user.name [name]
git config --global user.email [email]

远程登录 ：
创建连接：
git remote -v         --查看现有连接
 git remote add origin [地址]        --添加GitHub地址

push：
git push origin 分支

clone：
git clone [GitHub上clone地址 ]

拉取：
git pull  【远程地址】【分支名】


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